generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

model membresias {
  id                     String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre                 String     @db.VarChar(255)
  descripcion            String?
  tipo                   String     @db.VarChar(20)
  modalidad              String     @db.VarChar(20)
  precio                 Decimal    @db.Decimal(10, 2)
  duracion               Int
  caracteristicas        String[]   @default([])
  activa                 Boolean?   @default(true)
  clientes_activos_count Int?       @default(0) @map("clientes_activos")
  fecha_creacion         DateTime?  @default(now()) @db.Timestamptz(6)
  created_at             DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?  @updatedAt @db.Timestamptz(6)
  clientes               clientes[]

  @@index([activa])
  @@schema("public")
}

model clientes {
  id                String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nombre            String           @db.VarChar(255)
  email             String           @db.VarChar(255)
  telefono          String           @db.VarChar(20)
  dni               String?          @unique @db.VarChar(20)
  fecha_nacimiento  DateTime         @db.Date
  fecha_registro    DateTime?        @default(now()) @db.Timestamptz(6)
  membresia_id      String?          @db.Uuid
  nombre_membresia  String?          @db.VarChar(255)
  tipo_membresia    String?          @db.VarChar(50)
  fecha_inicio      DateTime?        @db.Timestamptz(6)
  fecha_fin         DateTime?        @db.Timestamptz(6)
  estado            String?          @default("activa") @db.VarChar(20)
  asistencias_count Int?             @default(0) @map("asistencias")
  avatar_url        String?
  created_at        DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?        @updatedAt @db.Timestamptz(6)
  asistencias       asistencias[]    @relation("ClienteAsistencias")
  membresia         membresias?      @relation(fields: [membresia_id], references: [id], onUpdate: NoAction)
  eventos           eventos[]
  rutinas           rutinas[]
  tarjeta           tarjetas_acceso?

  @@index([email])
  @@index([dni])
  @@index([estado])
  @@index([membresia_id])
  @@schema("public")
}

model eventos {
  id                     String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  titulo                 String        @db.VarChar(255)
  descripcion            String?
  fecha                  DateTime      @db.Date
  hora                   DateTime      @db.Time(6)
  tipo                   String        @db.VarChar(20)
  cliente_id             String?       @db.Uuid
  cliente_nombre         String?       @db.VarChar(255)
  entrenador             String?       @db.VarChar(255)
  duracion               Int           @default(60)
  estado                 String?       @default("programado") @db.VarChar(20)
  max_participantes      Int?          @default(1)
  participantes_actuales Int?          @default(0)
  precio                 Decimal?      @db.Decimal(10, 2)
  notas                  String?
  created_at             DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?     @updatedAt @db.Timestamptz(6)
  asistencias            asistencias[]
  cliente                clientes?     @relation(fields: [cliente_id], references: [id], onUpdate: NoAction)

  @@index([cliente_id])
  @@schema("public")
}

model asistencias {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  evento_id        String?   @db.Uuid
  cliente_id       String?   @db.Uuid
  fecha_asistencia DateTime? @default(now()) @db.Timestamptz(6)
  estado           String?   @default("presente") @db.VarChar(20)
  notas            String?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  cliente          clientes? @relation("ClienteAsistencias", fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  evento           eventos?  @relation(fields: [evento_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([evento_id, cliente_id])
  @@index([cliente_id])
  @@schema("public")
}

model profiles {
  id         String    @id @db.Uuid
  email      String?
  full_name  String?
  avatar_url String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      String    @db.Uuid

  @@schema("public")
}

model rutinas {
  id           String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cliente_id   String              @db.Uuid
  nombre       String              @db.VarChar(255)
  descripcion  String?
  estado       String?             @default("activa") @db.VarChar(20)
  fecha_inicio DateTime?           @db.Timestamptz(6)
  fecha_fin    DateTime?           @db.Timestamptz(6)
  created_at   DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?           @default(now()) @db.Timestamptz(6)
  cliente      clientes            @relation(fields: [cliente_id], references: [id], onUpdate: NoAction)
  ejercicios   rutina_ejercicios[]

  @@schema("public")
}

model rutina_ejercicios {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  rutina_id    String    @db.Uuid
  nombre       String    @db.VarChar(255)
  series       Int?
  repeticiones Int?
  dia          String?   @db.VarChar(20)
  notas        String?
  orden        Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  rutina       rutinas   @relation(fields: [rutina_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model tarjetas_acceso {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cliente_id     String    @unique @db.Uuid
  codigo         String    @unique @db.VarChar(64)
  estado         String?   @default("activa") @db.VarChar(20)
  ultima_entrada DateTime? @db.Timestamptz(6)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)
  cliente        clientes  @relation(fields: [cliente_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}
