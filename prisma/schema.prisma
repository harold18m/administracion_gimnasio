generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

model Memberships {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name           String    @db.VarChar(255)
  description    String?
  type           String    @db.VarChar(20)
  mode           String    @db.VarChar(20)
  price          Decimal   @db.Decimal(10, 2)
  duration       Int
  features       String[]  @default([])
  is_active      Boolean?  @default(true)
  active_clients Int?      @default(0)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @updatedAt @db.Timestamptz(6)
  clients        Clients[]

  @@index([is_active])
  @@schema("public")
}

model Clients {
  id               String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  full_name        String        @db.VarChar(255)
  email            String        @db.VarChar(255)
  phone            String        @db.VarChar(20)
  dni              String?       @unique @db.VarChar(20)
  birth_date       DateTime      @db.Date
  registered_at    DateTime?     @default(now()) @db.Timestamptz(6)
  membership_id    String?       @db.Uuid
  membership_name  String?       @db.VarChar(255)
  membership_type  String?       @db.VarChar(50)
  start_date       DateTime?     @db.Timestamptz(6)
  end_date         DateTime?     @db.Timestamptz(6)
  status           String?       @default("active") @db.VarChar(20)
  attendance_count Int?          @default(0)
  avatar_url       String?
  created_at       DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?     @updatedAt @db.Timestamptz(6)
  attendances      Attendances[] @relation("ClientAttendances")
  membership       Memberships?  @relation(fields: [membership_id], references: [id], onUpdate: NoAction, onDelete: SetNull)
  events           Events[]
  routines         Routines[]
  access_card      AccessCards?

  @@index([email])
  @@index([dni])
  @@index([status])
  @@index([membership_id])
  @@schema("public")
}

model Events {
  id                   String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title                String        @db.VarChar(255)
  description          String?
  date                 DateTime      @db.Date
  time                 DateTime      @db.Time(6)
  type                 String        @db.VarChar(20)
  client_id            String?       @db.Uuid
  client_name          String?       @db.VarChar(255)
  trainer              String?       @db.VarChar(255)
  duration             Int           @default(60)
  status               String?       @default("scheduled") @db.VarChar(20)
  max_participants     Int?          @default(1)
  current_participants Int?          @default(0)
  price                Decimal?      @db.Decimal(10, 2)
  notes                String?
  created_at           DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?     @updatedAt @db.Timestamptz(6)
  attendances          Attendances[]
  client               Clients?      @relation(fields: [client_id], references: [id], onUpdate: NoAction)

  @@index([client_id])
  @@schema("public")
}

model Attendances {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  event_id        String?   @db.Uuid
  client_id       String?   @db.Uuid
  attendance_date DateTime? @default(now()) @db.Timestamptz(6)
  status          String?   @default("present") @db.VarChar(20)
  notes           String?
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  client          Clients?  @relation("ClientAttendances", fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  event           Events?   @relation(fields: [event_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([event_id, client_id])
  @@index([client_id])
  @@schema("public")
}

model Profiles {
  id         String    @id @db.Uuid
  user_id    String    @unique @db.Uuid
  email      String?
  full_name  String?
  avatar_url String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @updatedAt @db.Timestamptz(6)

  @@schema("public")
}

model Routines {
  id          String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  client_id   String             @db.Uuid
  name        String             @db.VarChar(255)
  description String?
  status      String?            @default("active") @db.VarChar(20)
  start_date  DateTime?          @db.Timestamptz(6)
  end_date    DateTime?          @db.Timestamptz(6)
  created_at  DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?          @updatedAt @db.Timestamptz(6)
  client      Clients            @relation(fields: [client_id], references: [id], onUpdate: NoAction)
  exercises   RoutineExercises[]

  @@map("routines")
  @@schema("public")
}

model RoutineExercises {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  routine_id String    @db.Uuid
  name       String    @db.VarChar(255)
  sets       Int?
  reps       Int?
  day        String?   @db.VarChar(20)
  notes      String?
  order      Int?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  routine    Routines  @relation(fields: [routine_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("routine_exercises")
  @@schema("public")
}

model AccessCards {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  client_id  String    @unique @db.Uuid
  code       String    @unique @db.VarChar(64)
  status     String?   @default("active") @db.VarChar(20)
  last_entry DateTime? @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @updatedAt @db.Timestamptz(6)
  client     Clients   @relation(fields: [client_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

model RoutineTemplates {
  id          String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String                     @db.VarChar(255)
  description String?
  created_by  String?                    @db.VarChar(255)
  created_at  DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?                  @updatedAt @db.Timestamptz(6)
  exercises   RoutineTemplateExercises[]

  @@map("rutina_templates")
  @@schema("public")
}

model RoutineTemplateExercises {
  id                String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  template_id       String           @db.Uuid
  exercise_id       String?          @db.Uuid
  name              String?          @db.VarChar(255)
  sets              Int?
  repetitions       Int?
  suggested_weight  Decimal?         @db.Decimal(10, 2)
  day               String?          @db.VarChar(20)
  notes             String?
  order             Int?
  created_at        DateTime?        @default(now()) @db.Timestamptz(6)
  template          RoutineTemplates @relation(fields: [template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("rutina_template_ejercicios")
  @@schema("public")
}
