generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// =====================================================
// ENUMS
// =====================================================

enum TipoMembresia {
    mensual
    trimestral
    anual
}

enum ModalidadMembresia {
    diario
    interdiario
    libre
}

enum EstadoCliente {
    activa
    vencida
    suspendida
}

enum EstadoAsistencia {
    presente
    ausente
    tardanza
}

enum EstadoEvento {
    programado
    completado
    cancelado
}

enum TipoEvento {
    clase
    entrenamiento
    evaluacion
    otro
}

enum EstadoRutina {
    activa
    completada
    pausada
}

enum EstadoTarjeta {
    activa
    inactiva
    bloqueada
}

// =====================================================
// MODELOS
// =====================================================

model asistencias {
    id               String   @id @db.Uuid
    evento_id        String?  @db.Uuid
    cliente_id       String   @db.Uuid
    fecha_asistencia DateTime @default(now()) @db.Timestamptz(6)
    estado           String   @default("presente") @db.VarChar(20)
    notas            String?
    created_at       DateTime @default(now()) @db.Timestamptz(6)
    clientes         clientes @relation(fields: [cliente_id], references: [id], onDelete: Cascade)
    eventos          eventos? @relation(fields: [evento_id], references: [id], onDelete: Cascade)

    @@unique([evento_id, cliente_id])
    @@index([cliente_id])
}

model clientes {
    id                String        @id @default(uuid()) @db.Uuid
    nombre            String        @db.VarChar(255)
    email             String        @db.VarChar(255)
    telefono          String        @db.VarChar(20)
    dni               String?       @unique @db.VarChar(20)
    fecha_nacimiento  DateTime      @db.Date
    fecha_registro    DateTime      @default(now()) @db.Timestamptz(6)
    membresia_id      String?       @db.Uuid
    nombre_membresia  String?       @db.VarChar(255)
    tipo_membresia    String?       @db.VarChar(50)
    fecha_inicio      DateTime?     @db.Timestamptz(6)
    fecha_fin         DateTime?     @db.Timestamptz(6)
    estado            EstadoCliente @default(activa)
    asistencias_count Int           @default(0) @map("asistencias")
    avatar_url        String?
    created_at        DateTime      @default(now()) @db.Timestamptz(6)
    updated_at        DateTime      @updatedAt @db.Timestamptz(6)

    membresias      membresias?      @relation(fields: [membresia_id], references: [id])
    asistencias_rel asistencias[]
    eventos         eventos[]
    rutinas         rutinas[]
    tarjetas_acceso tarjetas_acceso?

    @@index([dni])
    @@index([email])
    @@index([estado])
    @@index([membresia_id])
}

model eventos {
    id                     String        @id @db.Uuid
    titulo                 String        @db.VarChar(255)
    descripcion            String?
    fecha                  DateTime      @db.Date
    hora                   DateTime      @db.Time(6)
    tipo                   String        @db.VarChar(20)
    cliente_id             String?       @db.Uuid
    nombre_cliente         String?       @db.VarChar(255)
    entrenador             String?       @db.VarChar(255)
    duracion               Int           @default(60)
    estado                 String        @default("programado") @db.VarChar(20)
    max_participantes      Int           @default(1)
    participantes_actuales Int           @default(0)
    precio                 Decimal?      @db.Decimal(10, 2)
    notas                  String?
    created_at             DateTime      @default(now()) @db.Timestamptz(6)
    updated_at             DateTime      @db.Timestamptz(6)
    asistencias            asistencias[]
    clientes               clientes?     @relation(fields: [cliente_id], references: [id])

    @@index([cliente_id])
}

model membresias {
    id               String     @id @default(uuid()) @db.Uuid
    nombre           String     @db.VarChar(255)
    descripcion      String?
    tipo             String     @db.VarChar(20)
    modalidad        String     @db.VarChar(20)
    precio           Decimal    @db.Decimal(10, 2)
    duracion         Int
    caracteristicas  String[]
    activa           Boolean    @default(true)
    clientes_activos Int        @default(0)
    created_at       DateTime   @default(now()) @db.Timestamptz(6)
    updated_at       DateTime   @updatedAt @db.Timestamptz(6)
    clientes         clientes[]

    @@index([activa])
}

model ejercicios {
    id          String   @id @default(uuid()) @db.Uuid
    nombre      String   @db.VarChar(255)
    categoria   String?  @db.VarChar(50)
    dificultad  String?  @db.VarChar(20)
    musculos    String[]
    descripcion String?
    imagen_url  String?
    video_url   String?
    created_at  DateTime @default(now()) @db.Timestamptz(6)
    updated_at  DateTime @updatedAt @db.Timestamptz(6)

    @@index([categoria])
    @@index([dificultad])
}

model perfiles {
    id              String   @id @db.Uuid
    user_id         String   @unique @db.Uuid
    email           String?
    nombre_completo String?
    avatar_url      String?
    created_at      DateTime @default(now()) @db.Timestamptz(6)
    updated_at      DateTime @db.Timestamptz(6)
}

model rutina_ejercicios {
    id           String   @id @db.Uuid
    rutina_id    String   @db.Uuid
    nombre       String   @db.VarChar(255)
    sets         Int?
    repeticiones Int?
    dia          String?  @db.VarChar(20)
    notas        String?
    orden        Int?
    created_at   DateTime @default(now()) @db.Timestamptz(6)
    rutinas      rutinas  @relation(fields: [rutina_id], references: [id], onDelete: Cascade)
}

model rutina_template_ejercicios {
    id               String           @id @db.Uuid
    template_id      String           @db.Uuid
    ejercicio_id     String?          @db.Uuid
    nombre           String?          @db.VarChar(255)
    sets             Int?
    repeticiones     Int?
    peso_sugerido    Decimal?         @db.Decimal(10, 2)
    dia              String?          @db.VarChar(20)
    notas            String?
    orden            Int?
    created_at       DateTime         @default(now()) @db.Timestamptz(6)
    rutina_templates rutina_templates @relation(fields: [template_id], references: [id], onDelete: Cascade)
}

model rutina_templates {
    id                         String                       @id @db.Uuid
    nombre                     String                       @db.VarChar(255)
    descripcion                String?
    creado_por                 String?                      @db.VarChar(255)
    created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
    updated_at                 DateTime                     @db.Timestamptz(6)
    rutina_template_ejercicios rutina_template_ejercicios[]
}

model rutinas {
    id                String              @id @db.Uuid
    cliente_id        String              @db.Uuid
    nombre            String              @db.VarChar(255)
    descripcion       String?
    estado            String              @default("activa") @db.VarChar(20)
    fecha_inicio      DateTime?           @db.Timestamptz(6)
    fecha_fin         DateTime?           @db.Timestamptz(6)
    created_at        DateTime            @default(now()) @db.Timestamptz(6)
    updated_at        DateTime            @db.Timestamptz(6)
    rutina_ejercicios rutina_ejercicios[]
    clientes          clientes            @relation(fields: [cliente_id], references: [id])
}

model tarjetas_acceso {
    id             String    @id @db.Uuid
    cliente_id     String    @unique @db.Uuid
    codigo         String    @unique @db.VarChar(64)
    estado         String    @default("activa") @db.VarChar(20)
    ultima_entrada DateTime? @db.Timestamptz(6)
    created_at     DateTime  @default(now()) @db.Timestamptz(6)
    updated_at     DateTime  @db.Timestamptz(6)
    clientes       clientes  @relation(fields: [cliente_id], references: [id])
}
